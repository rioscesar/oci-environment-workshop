---
  template: 
    templateName: JCS-DBCS-Template
    templateVersion: 1.2.9
    templateDescription: "Provisions a Stack composed of Java Cloud Service and Database Cloud Service instances using Oracle Storage Cloud Service. **WARNING** You will be billed for the Cloud resources created if you create a Cloud Stack from this template"
    parameters: 
      wlVersion: 
        label: JCS Version
        description: "Select a JCS Version"
        type: String
        default: 12cRelease212
        allowedValues: {"11gR1": "Oracle WebLogic Server 11g, 11.1.1.7", "12cR3": "Oracle WebLogic Server 12c, 12.1.3.0", "12cRelease212": "Oracle WebLogic Server 12c, 12.2.1.2"}
      wlComputeShape: 
        label: Compute Shape
        description: Select a Compute Shape for this service.
        type: ComputeShape
        default: {"Fn::If": [isOCI, VM.Standard1.1, oc3]}
        customize:
          regionType: {"Fn::If": [emptyRegion, OCICLASSIC, {"Fn::GetParam": stackRegion.regionType}]}
      wlByol:
        label: Bring Your Own License
        description: "Check this field if you wish to use your own license. If you choose this please make sure that you have proper entitlements to use for new service instances you are creating."
        type: Boolean
        default: false
        condition: jcsBYOL
      wlEntitlement:
        label: JCS Entitlement
        description: "This is the entitlement id used to identify the service in the tenant account."
        type: String
        mandatory: true
        condition: jcsMultEntitl
        allowedValues: {"Fn::GetParam": _account.jaas.entitlementids}
      publicKeyText: 
        label: SSH Public Key
        description: Click Edit to generate a new key pair, enter an existing public keys value or upload a new public key.
        type: ssh
        mandatory: true
        sensitive: true
      wlAdminUser: 
        label: Administrator Username
        description: "Your choice of name for the JCS administration user. Must be between 8 and 128 ASCII characters and cannot contain a tab, brackets, parentheses or the characters , < > & # | ?"
        type: String
        minLength: 8
        maxLength: 128
        default: weblogic
        allowedPattern: "[\\p{Print}&&[^',<>#&|\\?\\(\\)\\{\\}\t ]]++"
        constraintDescription: "JCS administration username must be between 8 and 128 ASCII characters and cannot contain a tab, brackets, parentheses or the characters , < > & # | ?"
      dbSid: 
        label: DB Name (SID)
        description: "Database name of your choice, up to 8 characters; must begin with a letter and can contain only letters and numbers."
        type: String
        minLength: 1
        maxLength: 8
        default: ORCL
        allowedPattern: "^[a-zA-Z][a-zA-Z0-9]*$"
        constraintDescription: "Database name can contain up to 8 characters; must begin with a letter and can contain only letters and numbers. "
      dbVersion: 
        label: DBCS Version
        description: "Select a DBCS Version"
        type: String
        default: 12.1.0.2
        allowedValues: {"11.2.0.4": "Oracle Database 11g Release 2", "12.1.0.2": "Oracle Database 12c Release 1", "12.2.0.1": "Oracle Database 12c Release 2" }
      dbByol:
        label: Bring Your Own License
        description: "Check this field if you wish to use your own license. If you choose this please make sure that you have proper entitlements to use for new service instances you are creating."
        type: Boolean
        default: false
        condition: dbcsBYOL
      dbEntitlement:
        label: DB Entitlement
        description: "This is the entitlement id used to identify the service in the tenant account."
        type: String
        condition: dbcsMultEntitl
        mandatory: true
        allowedValues: {"Fn::GetParam": _account.dbaas.entitlementids}
      dbSoftwareEdition:
        label: Software Edition
        description: "Select the database edition for this Oracle Database Cloud Service instance."
        type: String
        allowedValues: {"SE": "Standard Edition", "EE": "Enterprise Edition", "EE_HP": "Enterprise Edition - High Performance", "EE_EP": "Enterprise Edition - Extreme Performance" }
        default: SE
      commonPwd:
        label: Password (to access JCS and DBCS)
        description: "Password to access JCS and DBCS. Password must be between 8 and 30 characters with at least one lower case letter, one upper case letter, one number and one special character (_,#). For example, Ach1z0#d"
        type: Password
        minLength: 8
        maxLength: 30
        allowedPattern: "^(?=.*?[A-Z])(?=.*?[a-z])(?=.*[0-9])[a-zA-Z]([a-zA-Z0-9_#])+$"
        mandatory: true
        sensitive: true
        constraintDescription: "Password must be between 8 and 30 characters with at least one lower case letter, one upper case letter, one number and one special character (_,#). For example, Ach1z0#d"
      backupDestination:
        label: Backup Destination
        description: Backup Destination can be None, or Both Remote and Disk Storage
        type: String
        default: NONE
        mandatory: true
        allowedValues: {"NONE": "None", "BOTH": "Both Remote and Disk Storage" }
      backupStorageContainer:
        label: Java Backup Container
        description: https://foo.storage.oraclecloud.com/MyService-bar/MyContainer. To identify the URL of your storage account, see the <a href="http://www.oracle.com/pls/topic/lookup?ctx=cloud&id=CSSTO-GUID-221133EF-F408-4DCF-9BF7-7A1F12C3E8A6"> documentation</a>.
        type: String
        condition: backupRequired
        default:
          "Fn::If":
            - jcsMultEntitl
            - {"Fn::Join": ["", [{ "Fn::GetParam": {"Fn::Join": ["", [_account.jaas.,{"Fn::GetParam": wlEntitlement},.cloudstorageuri]]}}, "JaaS"]]}
            - {"Fn::Join": ["", [{"Fn::GetParam": _account.jaas.cloudstorageuri}, "JaaS"]]}
      dbBackupStorageContainer:
        label: Database Backup Container
        description: https://foo.storage.oraclecloud.com/MyService-bar/MyContainer. To identify the URL of your storage account, see the <a href="http://www.oracle.com/pls/topic/lookup?ctx=cloud&id=CSSTO-GUID-221133EF-F408-4DCF-9BF7-7A1F12C3E8A6"> documentation</a>.
        type: String
        condition: backupRequired
        default:
          "Fn::If":
            - dbcsMultEntitl
            - {"Fn::Join": ["", [{ "Fn::GetParam": {"Fn::Join": ["", [_account.dbaas.,{"Fn::GetParam": wlEntitlement},.cloudstorageuri]]}}, "DBaaS"]]}
            - {"Fn::Join": ["", [{"Fn::GetParam": _account.dbaas.cloudstorageuri}, "DBaaS"]]}
      backupStorageUser:
        label: Username
        description: Name of an Oracle Storage Cloud Service user that has write access to the specific container. If the container does not exist, then this user must have the Service Administrator role.
        type: String
        condition: backupRequired
      backupStoragePassword:
        label: Password
        description: Password for the Oracle Storage Cloud Service user.
        type: String
        sensitive: true
        condition: backupRequired
      createBackupContainer:
        label: Create Cloud Storage Container
        description: "Check this option if you want to create a new container with the information specified above."
        type: Boolean
        default: false
        condition: backupRequired
      dbComputeShape:
        label: Compute Shape
        description: Select a Compute Shape for this service.
        type: ComputeShape
        default: {"Fn::If": [isOCI, VM.Standard1.1, oc3]}
        customize:
          regionType: {"Fn::If": [emptyRegion, OCICLASSIC, {"Fn::GetParam": stackRegion.regionType}]}
      dbStorage: 
        label: Usable Database Storage (GB)
        description: "Enter the value for usable Database Storage in GB. The number must be between 15 and 1200."
        type: Number
        default: 50
      stackRegion:
        label: Region
        type: String
        customize:
          serviceType: JaaS
      sRegion:
        label: Region
        type: String
      availabilityDomain:
        label: Availability Domain
        type: String
      subnet:
        label: Subnet
        type: String
      useIdentityService:
        label: Enable authentication with Oracle Identity Cloud Service
        description: "Select to authenticate WebLogic users against Oracle Identity Cloud Service instead of the default WebLogic identity store. Enabling this option also creates an Oracle managed load balancer for this service instance."
        type: Boolean
        default: false
    parameterGroups:
      - label: Database Cloud
        parameters: [ dbByol, dbEntitlement, dbSid, dbVersion, dbComputeShape, dbStorage, dbSoftwareEdition ]
      - label: Access
        parameters: [ commonPwd, publicKeyText, sRegion ]
      - label: Storage Cloud (for Backup)
        parameters: [ backupDestination, backupStorageContainer, dbBackupStorageContainer, backupStorageUser, backupStoragePassword, createBackupContainer ]
      - label: Java Cloud
        parameters: [ useIdentityService, wlByol, wlEntitlement, wlVersion, wlComputeShape, wlAdminUser ]
    conditions:
       jcsMultEntitl: {"Fn::GreaterThan": [{"Fn::Size" : {"Fn::GetParam" : _account.jaas.entitlementids}}, 1]}
       dbcsMultEntitl: {"Fn::GreaterThan": [{"Fn::Size" : {"Fn::GetParam" : _account.dbaas.entitlementids}}, 1]}
       jcsBYOL: {"Fn::Equals": [true, "Fn::GetParam": _account.JaaS.BYOL]}
       dbcsBYOL: {"Fn::Equals": [true, "Fn::GetParam": _account.DBaaS.BYOL]}
       backupRequired: {"Fn::Equals": ["BOTH", "Fn::GetParam": backupDestination]}
       createContainer: {"Fn::If": [backupRequired, {"Fn::Equals": ["true", "Fn::GetParam": createBackupContainer]}, "false"]}
       emptyRegion: {"Fn::Empty": {"Fn::GetParam": sRegion}}
       emptyAd: {"Fn::Empty": {"Fn::GetParam": availabilityDomain}}
       emptySubnet: {"Fn::Empty": {"Fn::GetParam": subnet}}
       emptyIpNetwork: {"Fn::Empty": {"Fn::GetParam": stackRegion.ipNetwork}}
       isOCI: {"Fn::Equals": [OCI, "Fn::GetParam": stackRegion.regionType]}
    resources:
      backupContainer: 
        type: OSS.Container
        condition: createContainer
        parameters: 
          cloudStorageContainer: { "Fn::GetParam": dbBackupStorageContainer }
          cloudStorageUser: { "Fn::GetParam": backupStorageUser }
          cloudStoragePassword: { "Fn::GetParam": backupStoragePassword }
          refServiceType: JAAS
      jcs: 
        type: jaas
        parameters: 
          serviceName: { "Fn::Join": ["", ["Fn::GetParam": serviceName, JCS]] }
          serviceVersion: { "Fn::GetParam": wlVersion }
          meteringFrequency: HOURLY
          edition: EE
          backupDestination: { "Fn::GetParam": backupDestination }
          cloudStorageContainer: { "Fn::GetParam": backupStorageContainer }
          cloudStorageUser: { "Fn::GetParam": backupStorageUser }
          cloudStoragePassword: { "Fn::GetParam": backupStoragePassword }
          cloudStorageContainerAutoGenerate: { "Fn::GetParam": createBackupContainer }
          vmPublicKeyText: { "Fn::GetParam": publicKeyText }
          useIdentityService: { "Fn::GetParam": useIdentityService }
          configureLoadBalancer: { "Fn::GetParam": useIdentityService }
          isBYOL: { "Fn::If": [jcsBYOL, {"Fn::GetParam": wlByol}, "OPC::NoValue" ]}
          serviceEntitlementId: { "Fn::If": [jcsMultEntitl, {"Fn::GetParam": wlEntitlement}, "OPC::NoValue" ]}
          subnet: { "Fn::If": [emptySubnet, "OPC::NoValue", { "Fn::GetParam": subnet } ]}
          ipNetwork: { "Fn::If": [emptyIpNetwork, "OPC::NoValue", { "Fn::GetParam": stackRegion.ipNetwork } ]}
          availabilityDomain: { "Fn::If": [emptyAd, "OPC::NoValue", { "Fn::GetParam": availabilityDomain } ]}
          region: { "Fn::If": [emptyRegion, "OPC::NoValue", { "Fn::GetParam": sRegion } ]}
          components:
              WLS:
                  managedServerCount: 1
                  adminUserName: { "Fn::GetParam": wlAdminUser }
                  adminPassword: { "Fn::GetParam": commonPwd }
                  dbServiceName: { "Fn::GetAtt": [dbcs, serviceName] }
                  dbaName: sys
                  dbaPassword: { "Fn::GetParam": commonPwd }
                  shape: { "Fn::GetParam": wlComputeShape }
      dbcs: 
        type: dbaas
        parameters: 
          serviceName: { "Fn::Join": ["", ["Fn::GetParam": serviceName, DBCS]] }
          version: { "Fn::GetParam": dbVersion }
          level: PAAS
          edition: { "Fn::GetParam": dbSoftwareEdition }
          shape: { "Fn::GetParam": dbComputeShape }
          vmPublicKeyText: { "Fn::GetParam": publicKeyText }
          isBYOL: { "Fn::If": [dbcsBYOL, {"Fn::GetParam": dbByol}, "OPC::NoValue" ]}
          serviceEntitlementId: { "Fn::If": [dbcsMultEntitl, {"Fn::GetParam": dbEntitlement}, "OPC::NoValue" ]}
          subnet: { "Fn::If": [emptySubnet, "OPC::NoValue", { "Fn::GetParam": subnet } ]}
          ipNetwork: { "Fn::If": [emptyIpNetwork, "OPC::NoValue", { "Fn::GetParam": stackRegion.ipNetwork } ]}
          availabilityDomain: { "Fn::If": [emptyAd, "OPC::NoValue", { "Fn::GetParam": availabilityDomain } ]}
          region: { "Fn::If": [emptyRegion, "OPC::NoValue", { "Fn::GetParam": sRegion } ]}
          parameters: 
            - 
              type: db
              adminPassword: { "Fn::GetParam": commonPwd }
              sid: { "Fn::GetParam": dbSid }
              failoverDatabase: no
              backupDestination: { "Fn::GetParam": backupDestination }
              timezone: UTC
              charset: AL32UTF8
              ncharset: AL16UTF16
              cloudStorageContainer: { "Fn::GetParam": dbBackupStorageContainer }
              cloudStorageUser: { "Fn::GetParam": backupStorageUser }
              cloudStoragePwd: { "Fn::GetParam": backupStoragePassword }
              usableStorage: { "Fn::GetParam": dbStorage }
        depends_on: [ { "Fn::If": [createContainer, backupContainer, "OPC::NoValue" ]} ]
    attributes: 
        OraConnectString: 
            value: { "Fn::GetAtt": [dbcs, attributes.CONNECT_DESCRIPTOR] }
            description: DBCS connect descriptor
